:root {
    --cc-bg: #1b1b1b;
    --cc-text: #fff;
    --cc-size: 1rem;
    --cc-distance: 1rem;
    --cc-maxWidth: 22em;
    --cc-borderRadius: 0;
    --cc-checkbox-color: #0f0;
    --cc-font-size: inherit;
    --cc-font-size-small: 0.85rem;
    --cc-line-height: inherit;
    --cc-acceptButtonBg: #fff;
    --cc-acceptButtonBgHover: #fff;
    --cc-acceptButtonText: #1b1b1b;
    --cc-acceptButtonTextHover: #1b1b1b;
    --cc-acceptButtonFontWeight: bold;
    --cc-acceptButtonBorderRadius: 0;
    --cc-acceptButtonBorderSize: 0;
    --cc-acceptButtonBorderColor: #fff;
    --cc-acceptButtonPadding: 1rem 1rem;
  }

  .cc {
    font-family: inherit;
    background: var(--cc-bg);
    color: var(--cc-text);
    display: flex;
    position: fixed;
    width: 100%;
    line-height: var(--cc-line-height);
    bottom: 0;
    left: 0;
  }

  .cc a:hover {
    opacity: 0.8;
  }

  .cc--hidden {
    display: none;
  }

  .cc--bs {
    /* box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22); */
  }

  .cc [role=document] {
    padding: 1.5rem 1.25rem 2rem 1.25rem;
    display: flex;
    flex-direction: column;
    outline: 0;
  }

  @media screen and (min-width: 640px) {
    .cc--t [role=document],
    .cc--b  [role=document] {
      flex-direction: row;
      align-items: center;
    }

    .cc--tl {
      left: var(--cc-distance);
      top: var(--cc-distance);
      max-width: var(--cc-maxWidth);
      border-radius: var(--cc-borderRadius);
    }

    .cc--tr {
      right: var(--cc-distance);
      top: var(--cc-distance);
      left: auto;
      max-width: var(--cc-maxWidth);
      border-radius: var(--cc-borderRadius);
    }

    .cc--bl {
      top: auto;
      bottom: var(--cc-distance);
      left: var(--cc-distance);
      max-width: var(--cc-maxWidth);
      border-radius: var(--cc-borderRadius);
    }

    .cc--br {
      top: auto;
      right: var(--cc-distance);
      bottom: var(--cc-distance);
      left: auto;
      max-width: var(--cc-maxWidth);
      border-radius: var(--cc-borderRadius);
    }

    .cc--b {
      top: auto;
      bottom: 0;
      left: 0;
    }
  }

  #ccTitle:not(:focus):not(:active) {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    border: 0;
    padding: 0;
    white-space: nowrap;
    clip-path: inset(100%);
    clip: rect(0 0 0 0);
    overflow: hidden;
  }

  #ccDesc {
    margin: 0;
    font-size: var(--cc-font-size);
  }

  .cc__more {
    color: inherit !important;
    text-decoration: underline;
    display: inline-block;
  }

  .cc__settingsWrapper {
    display: block;
    position: relative;
  }

  .cc__settingsWrapper--active {
    padding: 0rem 0.75rem 0.25rem 0.75rem;
    border: 1px solid var(--cc-text);
    margin: 1.25rem 0 0.5rem 0;
    border-radius: 3px;
  }

  .cc__settingsWrapper--active .cc__settingsButton {
    border-color: inherit;
    -webkit-box-shadow: none;
    box-shadow: none;
    outline: none;
    font-weight: 700;
  }

  .cc__settingsButton {
    display: inline-flex;
    align-items: center;
    padding: var(--cc-size) 0;
    margin-bottom: -0.5rem;
    border: 0;
    background: transparent;
    /* font-weight: 700; */
    color: var(--cc-text);
    cursor: pointer;
    width: 100%;
    font-size: var(--cc-font-size);
    font-weight: var(--cc-acceptButtonFontWeight);
  }

  .cc__settingsButton:hover {
    opacity: 0.8;
  }

  .cc__settingsButton svg {
    width: var(--cc-size);
    height: var(--cc-size);
    margin-right: calc(var(--cc-size) / 4);
    font-size: var(--cc-font-size);
  }

  #cc__settings {
    display: none;
    padding-top: calc(var(--cc-size) / 4);
  }

  #cc__settings label {
    display: block;
    font-size: var(--cc-font-size-small);
    line-height: 1.4;
  }

  #cc__settings.cc-active {
    display: block;
  }

  .cc__acceptButton {
    margin-top: var(--cc-size);
    cursor: pointer;
    align-items: center;
    justify-content: center;
    display: inline-flex;
    text-align: center;
    /* border: 1px solid transparent; */
    border: none;
    padding: var(--cc-acceptButtonPadding);
    /* font-weight: 700; */
    transition: color 100ms, background-color 100ms, border-color 100ms, box-shadow 100ms;
    color: var(--cc-acceptButtonText);
    background-color: var(--cc-acceptButtonBg);
    font-size: var(--cc-font-size);
    font-weight: var(--cc-acceptButtonFontWeight);
    /* border-color: var(--cc-acceptButtonBg); */
    border-radius: var(--cc-acceptButtonBorderRadius);
    box-shadow: 0 0 0 var(--cc-acceptButtonBorderSize) var(--cc-acceptButtonBorderColor) inset;
  }

  .cc__acceptButton svg {
    width: var(--cc-size);
    height: var(--cc-size);
    margin-right: calc(var(--cc-size) / 4);
    margin-left: -8px;
  }

  .cc__acceptButton:hover {
    color: var(--cc-acceptButtonText);
    background-color: var(--cc-acceptButtonBgHover);
    color: var(--cc-acceptButtonTextHover);
    /* border-color: #dae0e5; */
  }

  /* .cc__acceptButton:focus {
    color: #fff;
    background-color: #23272b;
    border-color: #1d2124;
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(52,58,64,.5);
  } */

  /* Checkmark ––––––––––––––––––––––––––––––––– */

  .cc__checkbox-label {
    display: block;
    position: relative;
    padding-right: 60px;
    margin-bottom: 12px;
    cursor: pointer;
    /* font-size: 1rem; */
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .cc__checkbox-label--disabled {
    /* opacity: 0.8; */
    pointer-events: none;
  }
  
  /* Hide the browser's default checkbox */
  .cc__checkbox-label input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  /* Create a custom checkbox */
  .cc__checkbox-checkmark {
    position: absolute;
    /* top: 50%;
    transform: translateY(calc(-50% - 2px)); */
    top: 0.25em;
    right: 0;
    height: 24px;
    width: 48px;
    background-color: #fff;
    border-radius: 99999px;
    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
  }
  
  /* On mouse-over, add a grey background color */
  .cc__checkbox:hover input ~ .cc__checkbox-checkmark {
    background-color: #ccc;
  }
  
  /* When the checkbox is checked, add a blue background */
  .cc__checkbox-label input:checked ~ .cc__checkbox-checkmark {
    background-color: var(--cc-checkbox-color);
  }

  .cc__checkbox-label input:focus ~ .cc__checkbox-checkmark {
    outline:none; 
    box-shadow: 0px 0px 3px 3px  rgb(47, 127, 255);
  }
  
  /* When the checkbox is disabled */
  .cc__checkbox-label input:disabled ~ .cc__checkbox-checkmark {
    /* background-color: #999; */
  }
  
  /* Show the checkmark when checked */
  .cc__checkbox-label input:checked ~ .cc__checkbox-checkmark:after {
    left: 25px;
  }
  .cc__checkbox-label input:checked ~ .cc__checkbox-checkmark:before {
    content: "1";
    right: 32px;
    /* color: rgba(255, 255, 255, 1); */
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  /* Style the checkmark/indicator */
  .cc__checkbox-label .cc__checkbox-checkmark:after {
    content: "";
    position: absolute;
    left: 1px;
    top: 1px;
    width: 22px;
    height: 22px;
    background: #fff;
    border-radius: 100%;
    transition: left 100ms, background-color 100ms;
    /* box-shadow: 0px 1px 4px 1px rgba(0,0,0,0.5), 0 0 0 1px rgba(0,0,0,0.2) inset; */
    box-shadow: 0px 1px 4px 1px rgba(0,0,0,0.5);
  }

  /* Add state number */
  .cc__checkbox-label .cc__checkbox-checkmark:before {
    content: "0";
    position: absolute;
    right: 7px;
    top: calc(50% + 1px);
    transform: translateY(-50%);
    color: rgba(0, 0, 0, 0.5);
    line-height: 0;
  }

  /* Show a checkmark instead of toggle for disabled inputs */
  .cc__checkbox-label input:disabled ~ .cc__checkbox-checkmark {
    background-color: transparent;
    box-shadow: none;
  }
  .cc__checkbox-label input:disabled ~ .cc__checkbox-checkmark:after {
    display: none;
  }
  .cc__checkbox-label input:disabled ~ .cc__checkbox-checkmark:before {
    content: "";
    left: 18px;
    top: -4px;
    width: 8px;
    height: 16px;
    border: solid var(--cc-text);
    border-width: 0 4px 4px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }